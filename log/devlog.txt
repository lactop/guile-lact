Sun Jan 10 01:40:41 PM +05 2021

Проблема с ssh в том, что в конструктор ssh-команды набивается всё больше
параметров. Использование будет неудобоваримым. Тащить все эти параметры через
динамический контекст можно, но не кажется разумным решением. Кроме того, эти
динамические параметры, всё равно, должны быть инициализированы. Просто перенос
проблемы в другое место.

Видно, что можно навести некоторую ортогональность на параметры.

Подготовка ssh-команды может быть вынесена в отдельные процедуры, которые
учитывают необходимость перехода в какую-нибудь рабочую директорию. То есть,
что-нибудь такое:

  (shell-expression work-directory . command-words)

Сами ssh-команды, которые надо будет запускать, будут отличаться только адресами
(ip или fqdn) узлов. Поэтому, уместно каррировать.

  (define (ssh-command user key command) ... (lambda (host) ...))

В основной программе

  (define sshcmd (ssh-command "tespad"
                              "path/to/key"
                              (shell-expression "/etc" "cat" "passwd"))

Примерно такая схема. Должна, вероятно, сработать.

Sun Jan 10 02:03:06 PM +05 2021

Ещё одно замечание. Использовать root-пользователя по-умолчанию -- ОЧЕНЬ плохая
идея. По-умолчанию лучше вообще без имени пользователя.

Wed May 12 12:10:48 AM +05 2021

Ладно. Есть некий затык в options. Потому что, чтобы собрать из этих общих
функций парсер, в них надо передать ссылку на цикл, надо передать
usage-процедуру, которая выдаёт сообщение об ошибке. Дублировать эту информацию
совершенно не хочется. Возможно, тут то самое место, в которой можно
воспользоваться объектами или fluids. fluids проще, кажется. Хорошо, пусть
будет.
